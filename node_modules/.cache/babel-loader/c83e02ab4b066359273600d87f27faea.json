{"ast":null,"code":"var _jsxFileName = \"/home/faha/local-repo/journey-to-react/2.notes-app/src/components/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactMde from 'react-mde';\nimport Showdown from 'showdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editor(_ref) {\n  _s();\n\n  let {\n    currentNote,\n    updateNote\n  } = _ref;\n  const [selectedTab, setSelectedTab] = React.useState('write');\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"pane editor\",\n    children: /*#__PURE__*/_jsxDEV(ReactMde, {\n      value: currentNote.body,\n      onChange: updateNote,\n      selectedTab: selectedTab,\n      onTabChange: setSelectedTab,\n      generateMarkdownPreview: markdown => Promise.resolve(converter.makeHtml(markdown)),\n      minEditorHeight: 80,\n      heightUnits: \"vh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"IqPM/nSu9ECsW5jMh4Tr5vThw8M=\");\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/2.notes-app/src/components/Editor.js"],"names":["React","ReactMde","Showdown","Editor","currentNote","updateNote","selectedTab","setSelectedTab","useState","converter","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","body","markdown","Promise","resolve","makeHtml"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,eAAe,SAASC,MAAT,OAA6C;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAA6B;AAC1D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACQ,QAAN,CAAe,OAAf,CAAtC;AAEA,QAAMC,SAAS,GAAG,IAAIP,QAAQ,CAACQ,SAAb,CAAuB;AACvCC,IAAAA,MAAM,EAAE,IAD+B;AAEvCC,IAAAA,kBAAkB,EAAE,IAFmB;AAGvCC,IAAAA,aAAa,EAAE,IAHwB;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAvB,CAAlB;AAOA,sBACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,KAAK,EAAEV,WAAW,CAACW,IADrB;AAEE,MAAA,QAAQ,EAAEV,UAFZ;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,WAAW,EAAEC,cAJf;AAKE,MAAA,uBAAuB,EAAGS,QAAD,IACvBC,OAAO,CAACC,OAAR,CAAgBT,SAAS,CAACU,QAAV,CAAmBH,QAAnB,CAAhB,CANJ;AAQE,MAAA,eAAe,EAAE,EARnB;AASE,MAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzBuBb,M;;KAAAA,M","sourcesContent":["import React from 'react';\nimport ReactMde from 'react-mde';\nimport Showdown from 'showdown';\n\nexport default function Editor({ currentNote, updateNote }) {\n  const [selectedTab, setSelectedTab] = React.useState('write');\n\n  const converter = new Showdown.Converter({\n    tables: true,\n    simplifiedAutoLink: true,\n    strikethrough: true,\n    tasklists: true\n  });\n\n  return (\n    <section className=\"pane editor\">\n      <ReactMde\n        value={currentNote.body}\n        onChange={updateNote}\n        selectedTab={selectedTab}\n        onTabChange={setSelectedTab}\n        generateMarkdownPreview={(markdown) =>\n          Promise.resolve(converter.makeHtml(markdown))\n        }\n        minEditorHeight={80}\n        heightUnits=\"vh\"\n      />\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}