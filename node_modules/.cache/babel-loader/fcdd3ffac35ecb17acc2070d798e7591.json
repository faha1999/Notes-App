{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.headerCommand = void 0;\n\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\n\nfunction setHeader(initialState, api, prefix) {\n  // Adjust the selection to encompass the whole word if the caret is inside one\n  var newSelectionRange = MarkdownUtil_1.selectWord({\n    text: initialState.text,\n    selection: initialState.selection\n  });\n  var state1 = api.setSelectionRange(newSelectionRange); // Add the prefix to the selection\n\n  var state2 = api.replaceSelection(\"\" + prefix + state1.selectedText); // Adjust the selection to not contain the prefix\n\n  api.setSelectionRange({\n    start: state2.selection.end - state1.selectedText.length,\n    end: state2.selection.end\n  });\n}\n\nexports.headerCommand = {\n  buttonProps: {\n    \"aria-label\": \"Add header\"\n  },\n  execute: function (_a) {\n    var initialState = _a.initialState,\n        textApi = _a.textApi;\n    setHeader(initialState, textApi, \"### \");\n  }\n};","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/2.notes-app/node_modules/react-mde/lib/js/commands/default-commands/headerCommand.js"],"names":["Object","defineProperty","exports","value","headerCommand","MarkdownUtil_1","require","setHeader","initialState","api","prefix","newSelectionRange","selectWord","text","selection","state1","setSelectionRange","state2","replaceSelection","selectedText","start","end","length","buttonProps","execute","_a","textApi"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAIC,cAAc,GAAGC,OAAO,CAAC,yBAAD,CAA5B;;AACA,SAASC,SAAT,CAAmBC,YAAnB,EAAiCC,GAAjC,EAAsCC,MAAtC,EAA8C;AAC1C;AACA,MAAIC,iBAAiB,GAAGN,cAAc,CAACO,UAAf,CAA0B;AAC9CC,IAAAA,IAAI,EAAEL,YAAY,CAACK,IAD2B;AAE9CC,IAAAA,SAAS,EAAEN,YAAY,CAACM;AAFsB,GAA1B,CAAxB;AAIA,MAAIC,MAAM,GAAGN,GAAG,CAACO,iBAAJ,CAAsBL,iBAAtB,CAAb,CAN0C,CAO1C;;AACA,MAAIM,MAAM,GAAGR,GAAG,CAACS,gBAAJ,CAAqB,KAAKR,MAAL,GAAcK,MAAM,CAACI,YAA1C,CAAb,CAR0C,CAS1C;;AACAV,EAAAA,GAAG,CAACO,iBAAJ,CAAsB;AAClBI,IAAAA,KAAK,EAAEH,MAAM,CAACH,SAAP,CAAiBO,GAAjB,GAAuBN,MAAM,CAACI,YAAP,CAAoBG,MADhC;AAElBD,IAAAA,GAAG,EAAEJ,MAAM,CAACH,SAAP,CAAiBO;AAFJ,GAAtB;AAIH;;AACDnB,OAAO,CAACE,aAAR,GAAwB;AACpBmB,EAAAA,WAAW,EAAE;AAAE,kBAAc;AAAhB,GADO;AAEpBC,EAAAA,OAAO,EAAE,UAAUC,EAAV,EAAc;AACnB,QAAIjB,YAAY,GAAGiB,EAAE,CAACjB,YAAtB;AAAA,QAAoCkB,OAAO,GAAGD,EAAE,CAACC,OAAjD;AACAnB,IAAAA,SAAS,CAACC,YAAD,EAAekB,OAAf,EAAwB,MAAxB,CAAT;AACH;AALmB,CAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headerCommand = void 0;\nvar MarkdownUtil_1 = require(\"../../util/MarkdownUtil\");\nfunction setHeader(initialState, api, prefix) {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = MarkdownUtil_1.selectWord({\n        text: initialState.text,\n        selection: initialState.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Add the prefix to the selection\n    var state2 = api.replaceSelection(\"\" + prefix + state1.selectedText);\n    // Adjust the selection to not contain the prefix\n    api.setSelectionRange({\n        start: state2.selection.end - state1.selectedText.length,\n        end: state2.selection.end\n    });\n}\nexports.headerCommand = {\n    buttonProps: { \"aria-label\": \"Add header\" },\n    execute: function (_a) {\n        var initialState = _a.initialState, textApi = _a.textApi;\n        setHeader(initialState, textApi, \"### \");\n    }\n};\n"]},"metadata":{},"sourceType":"script"}