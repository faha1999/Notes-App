{"ast":null,"code":"var _jsxFileName = \"/home/faha/local-repo/journey-to-react/2.notes-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './css/style.min.css';\nimport Sidebar from './components/Sidebar';\nimport Editor from './components/Editor';\nimport { data } from './data';\nimport Split from 'react-split';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || '');\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9h0K4iNTg7tBLMkSz7uSIiyT9OI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/2.notes-app/src/App.js"],"names":["React","Sidebar","Editor","data","Split","nanoid","App","notes","setNotes","useState","currentNoteId","setCurrentNoteId","id","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,KAAK,CAACS,QAAN,CACvCF,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASK,EAAtB,IAA6B,EADW,CAA1C;;AAIA,WAASC,aAAT,GAAyB;AACvB,UAAMC,OAAO,GAAG;AACdF,MAAAA,EAAE,EAAEP,MAAM,EADI;AAEdU,MAAAA,IAAI,EAAE;AAFQ,KAAhB;AAIAP,IAAAA,QAAQ,CAAEQ,SAAD,IAAe,CAACF,OAAD,EAAU,GAAGE,SAAb,CAAhB,CAAR;AACAL,IAAAA,gBAAgB,CAACG,OAAO,CAACF,EAAT,CAAhB;AACD;;AAED,WAASK,UAAT,CAAoBC,IAApB,EAA0B;AACxBV,IAAAA,QAAQ,CAAEW,QAAD,IACPA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACxB,aAAOA,OAAO,CAACT,EAAR,KAAeF,aAAf,GACH,EAAE,GAAGW,OAAL;AAAcN,QAAAA,IAAI,EAAEG;AAApB,OADG,GAEHG,OAFJ;AAGD,KAJD,CADM,CAAR;AAOD;;AAED,WAASC,eAAT,GAA2B;AACzB,WACEf,KAAK,CAACgB,IAAN,CAAYC,IAAD,IAAU;AACnB,aAAOA,IAAI,CAACZ,EAAL,KAAYF,aAAnB;AACD,KAFD,KAEMH,KAAK,CAAC,CAAD,CAHb;AAKD;;AAED,sBACE;AAAA,cACGA,KAAK,CAACkB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CAAd;AAAwB,MAAA,SAAS,EAAC,YAAlC;AAA+C,MAAA,SAAS,EAAC,OAAzD;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,KAAK,EAAElB,KADT;AAEE,QAAA,WAAW,EAAEe,eAAe,EAF9B;AAGE,QAAA,gBAAgB,EAAEX,gBAHpB;AAIE,QAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,EAOGH,aAAa,IAAIH,KAAK,CAACkB,MAAN,GAAe,CAAhC,iBACC,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEH,eAAe,EAApC;AAAwC,QAAA,UAAU,EAAEL;AAApD;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAaC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAEJ,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAzDuBP,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport './css/style.min.css';\nimport Sidebar from './components/Sidebar';\nimport Editor from './components/Editor';\nimport { data } from './data';\nimport Split from 'react-split';\nimport { nanoid } from 'nanoid';\n\nexport default function App() {\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || ''\n  );\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes((prevNotes) => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes((oldNotes) =>\n      oldNotes.map((oldNote) => {\n        return oldNote.id === currentNoteId\n          ? { ...oldNote, body: text }\n          : oldNote;\n      })\n    );\n  }\n\n  function findCurrentNote() {\n    return (\n      notes.find((note) => {\n        return note.id === currentNoteId;\n      }) || notes[0]\n    );\n  }\n\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={notes}\n            currentNote={findCurrentNote()}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n          />\n          {currentNoteId && notes.length > 0 && (\n            <Editor currentNote={findCurrentNote()} updateNote={updateNote} />\n          )}\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}